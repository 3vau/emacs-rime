#+TITLE: Emacs Rime

[[file:https://i.imgur.com/S15IbwJ.gif]]

[[file:README_CN.org][中文文档]]

Emacs in Rime, support multiple schemas.

* Installation

** Requirements

*NOTE*: emacs-rime will build dynamic module automatically, 
hence ~make~ and ~gcc~ is required.

** Install librime

*** Linux

You can install librime with package manager.

It is named ~librime~ in Arch/Manjaro, and ~librime-dev~ in Debian/Ubuntu, etc.

*** MacOS

You can download the release.

#+BEGIN_SRC bash
  wget https://github.com/rime/librime/releases/download/1.5.3/rime-1.5.3-osx.zip
  unzip rime-1.5.3-osx.zip -d ~/.emacs.d/librime
  rm -rf rime-1.5.3-osx.zip
#+END_SRC

** Minimal configuration

#+html: <details>
#+html: <summary>Use Straight</summary>
#+BEGIN_SRC emacs-lisp
  (use-package rime
    :straight (rime :type git
                    :host github
                    :repo "DogLooksGood/emacs-rime"
                    :files ("rime.el" "Makefile" "lib.c"))
    :custom
    (default-input-method "rime"))
#+END_SRC
#+html: </details>

#+html: <details>
#+html: <summary>Use Quelpa</summary>
#+BEGIN_SRC emacs-lisp
  (use-package rime
    :quelpa (rime :fetcher github
                  :repo "DogLooksGood/emacs-rime"
                  :files ("rime.el" "Makefile" "lib.c"))
    :custom
    (default-input-method "rime"))
#+END_SRC
#+html: </details>

*NOTE*: If you are on MacOS or don't have librime in standard path, 
you *MUST* specify ~rime-librime-root~.

Put following in the ~:custom~ section. 

(Assuming you unzip librime to ~/.emacs.d/librime)

#+BEGIN_SRC emacs-lisp
(rime-librime-root "~/.emacs.d/librime/dist")
#+END_SRC

* Keybindings in Rime.

With following configuration, you can send a serials of keybindings to Rime.
Since you may want them to help you with cursor navigation, candidate pagination and selection.

Currently the keybinding with Control(C-), Meta(M-) and Shift(S-) is supported.

#+BEGIN_SRC emacs-lisp
  ;; defaults
  (setq rime-translate-keybindings
    '("C-f" "C-b" "C-n" "C-p" "C-g"))
#+END_SRC

* Candidate menu style

Set via ~rime-show-candidate~.

| Value      | description                                                                 |
|------------+-----------------------------------------------------------------------------|
| ~nil~        | don't show candidate at all.                                                |
| ~minibuffer~ | Display in minibuffer.                                                      |
| ~message~    | Display with ~message~ function, useful when you use minibuffer as mode-line. |
| ~popup~      | Use popup.                                                                  |
| ~posframe~   | Use posfarme, will fallback to popup in TUI                                 |

* Open Rime menu

Assuming you use ~C-~~ for the menu.

#+begin_src yaml
  switcher:
    caption: 〔方案選單〕
    hotkeys:
      - Control+grave
#+end_src

You can bind this key to ~rime-mode-map~ with command ~rime-send-keybinding~.

#+begin_src emacs-lisp
  (use-package
    ...

    :bind
    (:map rime-mode-map
          ("C-`" . 'rime-send-keybinding))
    ...
    )
#+end_src

* The lighter

You can get a lighter via ~(rime-lighter)~, which returns you a colored ~ㄓ~.
Put it in modeline or anywhere you want.

You can customize with ~rime-title~, ~rime-indicator-face~ and ~rime-indicator-dim-face~.

* Temporarily ascii mode

If you want specific a list of rules to automatically enable ascii mode, you can customize ~rime-disable-predicates~.

Following is a example to use ascii mode in ~evil-normal-state~ or when cursor is after alphabet character or when cursor is in code.

#+BEGIN_SRC emacs-lisp
  (setq rime-disable-predicates
        '(rime-predicate-evil-mode-p
          rime-predicate-after-alphabet-char-p
          rime-predicate-prog-in-code-p))
#+END_SRC

#+html: <details>
#+html: <summary>Built-in Predicate Functions</summary>

- ~rime-predicate-after-alphabet-char-p~

  Only alphabet character can be entered after an alphabet character.

- ~rime-predicate-prog-in-code-p~

  In the ~prog-mode~ and ~conf-mode~, Chinese characters can be entered only in comments and quotes.

- ~rime-predicate-evil-mode-p~

  Only alphabet character can be entered in the non-editing state of ~evil-mode~.

- ~rime-predicate-punctuation-line-begin-p~

  Automatically switch to English punctuation when entering punctuation at the beginning of the line.

- ~rime-predicate-auto-english-p~

  When entering characters, automatically switch Chinese/English with space as boundary,

#+html: </details>

** Force enable

If one of ~rime-disable-predicates~ returns t, you can still force enable the input method with ~rime-force-enable~.
The effect will only last for one input behavior.

You probably want to give this command a keybinding.

* The soft cursor

Default to ~|~ , you can customize it with

#+BEGIN_SRC emacs-lisp
  (setq rime-cursor "˰")
#+END_SRC

* Shortcut to open Rime configuration file

Use ~rime-open-configuration~.

* Thanks for all the contributors

- [[https://github.com/Z572][Z572]]
- [[https://github.com/cnsunyour][cnsunyour]]
- [[https://github.com/shuxiao9058][shuxiao9058]]
- [[https://github.com/lkzz][lkzz]]
